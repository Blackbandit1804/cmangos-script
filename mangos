#!/bin/bash

############################################################################
#                      C M a N G O S  -  H E L P E R                       #
#               Continued Massive Network Game Object Server               #
############################################################################

# By Rainman
# V20201301
# 0.5.8.9

###############
# server/info #
###############

source /scripts/server.txt # please edit if wrong.

# easter_egg

printf "\e[31m
                                    ▄▄▄▄▄
                              ▄▄▄███░░░▒▒▒▓▓
                          ▄▄██░░░▒▒▒▓▓▓          WELCoME To THE \e[1mDARKSiDE\e[0;31m!!
                        ▄█░░▒▒▓▓
▄▄▄▄▄▄                ▄█░▒▓                     ▄▄▄▄▄▄▄                   ▄▄▄▄▄
▒▒▒▒▒▒████████▄▄▄▄   █░▒▓                    ▄██▀▀   ▀▀██▄    ▄▄▄▄████████▒▒▒▒▒
▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒█▀▄▄▄██████▄▄▄          ▄██▀          █▒▓ ██▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓
      ▓▓▓▓▓▓▓▓▓▓▓ ▄██▀▀      ▀▀▀███▄▄▄ ▄▄██▀      ██     ▓  ▒▒▓▓▓▓▓▓▓▓▓▓▓▓
                 ▓▐█    ▐█         ▀▀▀▄▀▀                ▓  ▓▓
                  ███▄     ▄▄▄▄▄▄▄▀██▀▄▀█░▀█▄▄▄▄▄▄     ▄░▒▓
                 ▐█████████░░▒▒▓▓ ▐▌ ▄█▄ ▐░▒▓████████████░▒▓
                 ▐████░░▒▒▓▓  ▄▄████░▒ ██░▒▓   ▀▀▀███████░▒▓
  \e[1;35mToDAY iS\e[0;31m        █░▒▓▓     ▄███████░▒ ██░░▒▒▓  ▓    ▀▀█░▒▓
     \e[35m$NOW\e[31m    ▀   ▓▓ ▄████████░▒  ▀ █░░▒▒▓    ▓▓▓
                         ▄██▀▀▀▄▄▄ ▐▀▀ █▀▄ ▄▄▄   ▓  ▓
                         ▄▄ █▀ ▐▒   ▀  ▐   ▀▒  █▀ ▄▄
                         ▐▒     ▀           ▀     ▐▒
                          ▀                       ▀\n\e[0m"
printf "

 Explosions! MORE explosions! I got to have more explosions!

 — Sicco Thermaplugg



"

# menu_start

while :
do
clear
printf "\e[31m-----------------------------------------------
    _____ _____     _____ _____ _____ _____
   |     |     |___|   | |   __|     |   __|
   |   --| | | | .'| | | |  |  |  |  |__   |
   |_____|_|_|_|__,|_|___|_____|_____|_____|\n\e[0m"
cat<<EOF
           C(ontinued)-MaNGOS Helper
             --------------------
EOF
id=$(mysql --defaults-extra-file="$sql_mycnf" -N --execute="SELECT SUM(online) FROM $db_characters.characters;"); 2> /dev/null
 echo "               Online Players $id"
guilds=$(mysql --defaults-extra-file="$sql_mycnf" -N --execute="SELECT count(*) FROM $db_characters.guild;"); 2> /dev/null
 echo "                   Guilds $guilds"
 echo
cat<<EOF
                $load

EOF

# service_status

# set column width
COLUMNS=3
services=("mangosd" "realmd")
# sort services
IFS=$'\n' services=($(sort <<<"${services[*]}"))
unset IFS
service_status=()
# get status of all services
for service in "${services[@]}"; do
    service_status+=($(systemctl is-active "$service"))
done >/dev/null 2>&1
out="     "
for i in ${!services[@]}; do
    # color green if service is active, else red
    if [[ "${service_status[$i]}" == "active" ]]; then
        out+="${services[$i]}:,${color_green}${service_status[$i]}${color_no},"
    else
        out+="${services[$i]}:,${color_red}${service_status[$i]}${color_no},"
    fi
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

printf "$out" | column -ts $',' | sed -e 's/^/  /'

# service_status_end

cat<<EOF

       Start with checking for updates c)

  a : login (command)      t : characters
  c : check for updates    u : accounts
  m : update CMaNGOS       g : guilds
  d : update Database      p : create .patch file
  s : shutdown server      w : update Helper
  r : restart server       Q : quit
  o : online check

EOF
 read -n1 -s
 case "$REPLY" in

# menu_end

"a")

#start_task

 echo
printf "\e[31m   ._________________.
   |.---------------.|
   || \033[0mmangos>\e[31m       ||
   ||               ||
   ||               ||
   ||               ||
   || \e[1;32m$temp\033[1;31m          ||
   ||_______________||
   /.-.-.-.-.-.-.-.-.\\
  /.-.-.-.-.-.-.-.-.-.\\
 /.-.-.-.-.-.-.-.-.-.-.\\
/______/__________\___\e[1;32mo\033[1;31m_\\
\_______________________/\033[0m"
 echo
printf "
 CMaNGOS Command Center

 Account Creation Example

 .account create <username> <password>
 .account set addon <username> <expansion-version>
 .account set gmlevel <username> <level>

  ------------------------------------------------
 'commands' will list all of the available commands
 'quit' and then hit Enter to exit
 "
 echo
nc $host_nc $port_nc
 echo

#end_task

 ;;

"c")

#start_task

printf "Checking mangos-classic (\e[1;32mworld\033[0m) for any updates .."
 echo
sudo chown -R $user:$group $folder_core
cd $folder_core
 sleep 1
git pull
 echo
printf "Checking classic-db (\e[1;32mdatabase\033[0m) for any updates .."
 echo
sudo chown -R $user:$group $folder_db
cd $folder_db
 sleep 1
git pull
 echo
printf "Checking mangos helper (\e[1;32mscript\033[0m) for any updates .."
 echo
sudo chown -R $user:$group $folder_helper
cd $folder_helper
 sleep 1
git pull
 echo
 read -p "Press Enter to continue" </dev/tty
 echo

#end_task

 ;;

"m")

#start_task

 echo
 echo "Update MaNGOS?"
 echo
 read -p "Are you sure? (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
printf "Updating mangos-classic (\e[1;32mworld\033[0m) .."
 echo
sudo apt-get install checkinstall -y 1> /dev/null
 echo -ne '(10%)\r'
 sleep 1
sudo chown -R $user:$group $folder_wow
 echo -ne '(20%)\r'
 sleep 1
cd $folder_build
 echo -ne '(30%)\r'
 sleep 1
sudo service realmd stop
 echo -ne '(40%)\r'
 sleep 1
sudo service mangosd stop
 echo -ne '(50%)\r'
 sleep 1
cmake .. $cmake
 echo -ne '(60%)\r'
 sleep 1
make
 echo
 echo -ne '(90%)\r'
 sleep 1
printf "Select the install operation"
 echo
 echo " 1) make install"
 echo " 2) checkinstall with backup"
 echo
 read n
case $n in
 1) echo "make install"
sudo make install
 ;;
 2) echo "checkinstall"
sudo checkinstall
 ;;
 *) echo "invalid option";;
esac
 echo -ne '(100%)\r'
 sleep 1
 echo
 read -p "Press Enter to continue" </dev/tty
fi

#end_task

 ;;

"d")

#start_task

 echo
 echo "Update Database?"
 echo
 read -p "Are you sure? (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
printf "Updating classic-db (\e[1;32mdatabase\033[0m) .."
 echo
sudo apt-get install mysql-server mysql-client -y 1> /dev/null
 echo -ne '(5%)\r'
 sleep 1
sudo service realmd stop
 echo -ne '(10%)\r'
 sleep 1
sudo service mangosd stop
 echo -ne '(20%)\r'
 sleep 1
mysqldump --defaults-extra-file="$sql_mycnf" --column-statistics=0 $db_characters > $folder_wow/$db_characters-$NOW.sql
 echo -ne '(30%)\r'
 sleep 1
mysqldump --defaults-extra-file="$sql_mycnf" --column-statistics=0 $db_realmd > $folder_wow/$db_realmd-$NOW.sql
 echo -ne '(40%)\r'
 sleep 1
mysqladmin -f --defaults-extra-file="$sql_mycnf" drop $db_characters
 echo -ne '(45%)\r'
 sleep 1
mysqladmin -f --defaults-extra-file="$sql_mycnf" drop $db_realmd
 echo -ne '(46%)\r'
 sleep 1
mysql --defaults-extra-file="$sql_mycnf" -e "CREATE DATABASE $db_characters"
 echo -ne '(47%)\r'
sleep 1
mysql --defaults-extra-file="$sql_mycnf" -e "CREATE DATABASE $db_realmd"
 echo -ne '(48%)\r'
 sleep 1
for sql_file in `ls $folder_characters/*.sql`; do mysql --defaults-extra-file="$sql_mycnf" --database=$db_characters < $sql_file ; done
 echo -ne '(50%)\r'
 sleep 1
for sql_file in `ls $folder_realmd/*.sql`; do mysql --defaults-extra-file="$sql_mycnf" --database=$db_realmd < $sql_file ; done
 echo -ne '(60%)\r'
 sleep 1
mysql --defaults-extra-file="$sql_mycnf" $db_characters < $folder_wow/$db_characters-$NOW.sql;
 echo -ne '(70%)\r'
 sleep 1
mysql --defaults-extra-file="$sql_mycnf" $db_realmd < $folder_wow/$db_realmd-$NOW.sql;
 echo -ne '(80%)\r'
 sleep 1
sudo chown -R $user:$group $folder_wow
cd $folder_db
 echo -ne '(90%)\r'
 sleep 1
./InstallFullDB.sh
 echo -ne '(95%)\r'
 sleep 1
 read -p "Converting myisam -> innodb? (y/n) " -n 1 -r
 echo
 echo -ne '(100%)\r'
 sleep 1
if [[ $REPLY =~ ^[Yy]$ ]]
then

#convert_mysql_engine = myisam -> innodb

TABLES=$(mysql --defaults-extra-file="$sql_mycnf" --skip-column-names -B -D $db_mangos -e 'show tables')
for T in $TABLES
do
mysql --defaults-extra-file="$sql_mycnf" -D $db_mangos -e "ALTER TABLE $T ENGINE=innodb ROW_FORMAT=DYNAMIC"
done
 echo -ne '(80%)\r'
 sleep 1
TABLES=$(mysql --defaults-extra-file="$sql_mycnf" --skip-column-names -B -D $db_realmd -e 'show tables')
for T in $TABLES
do
mysql --defaults-extra-file="$sql_mycnf" -D $db_realmd -e "ALTER TABLE $T ENGINE=innodb ROW_FORMAT=DYNAMIC"
done
 echo -ne '(90%)\r'
 sleep 1
TABLES=$(mysql --defaults-extra-file="$sql_mycnf" --skip-column-names -B -D $db_characters -e 'show tables')
for T in $TABLES
do
mysql --defaults-extra-file="$sql_mycnf" -D $db_characters -e "ALTER TABLE $T ENGINE=innodb ROW_FORMAT=DYNAMIC"
done
 echo -ne '(98%)\r'
 sleep 1
mysql --defaults-extra-file="$sql_mycnf" --execute="characters < $folder_wow/$db_characters-$NOW.sql"
 echo -ne '(99%)\r'
 sleep 1
mysql --defaults-extra-file="$sql_mycnf" --execute="realmd < $folder_wow/$db_realmd-$NOW.sql"
 echo -ne '(100%)\r'
 sleep 1
 read -p "Press Enter to continue" </dev/tty
fi
fi

#end_task

 ;;

"u")

#start_task

 echo "User Accounts"
 echo
mysql --defaults-extra-file="$sql_mycnf" --execute="SELECT username, gmlevel, last_ip, DATE_FORMAT(last_login, '%Y-%m-%d') last_login, id FROM $db_realmd.account;"
 read -p "Press Enter to continue" </dev/tty

#end_task

 ;;

 "t")

#start_task

 echo "Characters"
 echo
mysql --defaults-extra-file="$sql_mycnf" --execute="SELECT name, level, online, account FROM $db_characters.characters;"
 read -p "Press Enter to continue" </dev/tty

#end_task

  ;;

  "g")

#start_task

 echo "Guilds"
 echo
mysql --defaults-extra-file="$sql_mycnf" --execute="SELECT name, motd FROM $db_characters.guild;"
 read -p "Press Enter to continue" </dev/tty

#end_task

   ;;

"s")

#start_task

 echo
 echo "Shutdown Server?"
 echo
 read -p "Are you sure? (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
printf "\033[1;31mShutting down server ..\033[0m"
 echo
 echo -ne '(0%)\r'
 sleep 1
sudo service realmd stop 1> /dev/null
 echo -ne '(50%)\r'
 sleep 1
sudo service mangosd stop 1> /dev/null
 echo -ne '(100%)\r'
 sleep 1
 echo
fi

#end_task

 ;;

"r")

#start_task

 echo
 echo "Restart Server?"
 echo
 read -p "Are you sure? (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
printf "\e[1;32mRestarting server ..\033[0m"
 echo
 echo -ne '(0%)\r'
 sleep 1
sudo service realmd restart
 echo -ne '(50%)\r'
 sleep 1
sudo service mangosd restart
 echo -ne '(100%)\r'
 sleep 1
 echo
fi
 echo
 read -p "Check server log? CTRL + C to exit! (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
sudo tail $folder_core/run/logs/Server.log
 echo
 read -p "Press Enter to continue" </dev/tty
 echo
fi

#end_task

 ;;

"w")

#start_task

 echo
 echo "Update Helper?"
 echo
 read -p "Are you sure? (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
printf "\e[1;32mUpdating Helper\033[0m"
 echo
 echo -ne '(0%)\r'
 sleep 1
 echo "Moving older mangos -> /usr/local/bin/mangos.old .."
sudo mv /usr/local/bin/mangos /usr/local/bin/mangos.old
 echo -ne '(10%)\r'
 sleep 1
 echo "Stripping executable flag on mangos.old .."
sudo chmod -x /usr/local/bin/mangos.old
 echo -ne '(20%)\r'
 sleep 1
sudo chown -R $user:$group $folder_helper
 echo -ne '(30%)\r'
 sleep 1
cd $folder_helper
 echo -ne '(40%)\r'
 sleep 1
git pull
 echo -ne '(60%)\r'
 sleep 1
 echo "Installing new mangos .."
 echo -ne '(60%)\r'
 sleep 1
sudo cp mangos /usr/local/bin
 echo -ne '(80%)\r'
 sleep 1
sudo chmod +x /usr/local/bin/mangos
 echo -ne '(100%)\r'
 sleep 1
 echo
 echo "Restart mangos please.. will exit now."
 sleep 1
exit
fi

#end_task

 ;;

"p")

#start_task

 echo
 echo "Create patch?"
 echo
 read -p "Are you sure? (y/n) " -n 1 -r
 echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
 echo "Creating patch file .."
 echo -ne '(0%)\r'
 sleep 1
sudo chown -R $user:$group $folder_wow
 echo -ne '(20%)\r'
 sleep 1
cd $folder_core
 echo -ne '(40%)\r'
 sleep 1
git checkout sql/create/db_create_mysql.sql 1> /dev/null
 echo -ne '(80%)\r'
 sleep 1
git diff > $patch
 sleep 1
 echo -ne '(100%)\r'
 sleep 1
 echo
fi

#end_task

 ;;

 "o")

#start_task

# internet

 echo
printf "\e[1;32mOnline check\033[0m -> \e[1;32minternet\033[0m/\e[1;32mintranet\033[0m"
 echo
 echo "Checking .."
 echo
if nc -z $internet $realm_port 2>/dev/null; then
printf "\e[1;32m✓\033[0m $server_name - [ $internet ]"
ping -qc1 $internet 2>&1 | awk -F/ '/^rtt/ { printf " - OK %.2f ms\n", $5; ok = 1 } END { if (!ok) print " - FAIL" }'
else
printf "\033[1;31m✗\033[0m $server_name - [ $internet ]"
 echo
fi

# intranet

if nc -z $intranet $realm_port 2>/dev/null; then
printf "\e[1;32m✓\033[0m $server_name_lan - [ $intranet ]"
ping -qc1 $intranet 2>&1 | awk -F/ '/^rtt/ { printf " - OK %.2f ms\n", $5; ok = 1 } END { if (!ok) print " - FAIL" }'
else
printf "\033[1;31m✗\033[0m $server_name_lan - [ $intranet ]"
 echo
fi
 echo
 read -p "Press Enter to continue" </dev/tty

#end_task

  ;;

"Q")  exit                      ;;
"q")  echo "case sensitive!!"   ;;
 * )  echo "invalid option"     ;;
esac
 sleep 1
done
